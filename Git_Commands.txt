1. Configuration Commands
a. git config
Explanation: Configures Git settings such as username, email, editor, etc.
Applications: Setting up Git for the first time, customizing settings.
Examples:
git config --global user.name "Koushik Reddy"
git config --global user.email "koushik@example.com"
git config --list
2. Repository Initialization and Management
a. git init
Explanation: Initializes a new Git repository.
Applications: Creating a new project with version control.
Examples:

git init
b. git clone
Explanation: Copies an existing repository.
Applications: Starting work on an existing project.
Examples:
git clone https://github.com/user/repo.git
3. File Operations
a. git add
Explanation: Adds changes to the staging area.
Applications: Preparing files for commit.
Examples:
git add file.txt
git add .
b. git rm
Explanation: Removes files from the working directory and/or index.
Applications: Deleting files from a repository.
Examples:
git rm file.txt
c. git mv
Explanation: Moves or renames files.
Applications: Managing file locations and names.
Examples:
git mv old_name.txt new_name.txt
4. Commit Operations
a. git commit
Explanation: Saves changes to the repository.
Applications: Creating a snapshot of your project.
Examples:
git commit -m "Initial commit"
git commit --amend
b. git log
Explanation: Shows commit history.
Applications: Reviewing changes over time.
Examples:
git log
git log --oneline
c. git status
Explanation: Displays the status of the working directory and staging area.
Applications: Checking which files have been modified or staged.
Examples:
git status
5. Branching and Merging
a. git branch
Explanation: Manages branches in a repository.
Applications: Working on different features simultaneously.
Examples:
git branch feature-branch
git branch -d feature-branch
b. git checkout
Explanation: Switches between branches or restores files.
Applications: Moving to a specific branch or state.
Examples:
git checkout feature-branch
git checkout file.txt
c. git switch
Explanation: Switches branches (preferred over checkout for branches).
Applications: Moving between branches.
Examples:
git switch feature-branch
d. git merge
Explanation: Combines changes from one branch into another.
Applications: Finalizing feature work.
Examples:
git merge feature-branch
6. Stashing
a. git stash
Explanation: Temporarily saves changes for later.
Applications: Switching tasks without committing.
Examples:
git stash
git stash apply
7. Remote Repository Operations
a. git remote
Explanation: Manages connections to remote repositories.
Applications: Working with remote repositories.
Examples:
git remote add origin https://github.com/user/repo.git
git remote -v
b. git fetch
Explanation: Downloads updates from a remote repository.
Applications: Updating local references.
Examples:
git fetch origin
c. git pull
Explanation: Fetches and merges updates from a remote repository.
Applications: Syncing with remote repositories.
Examples:
git pull origin main
d. git push
Explanation: Uploads local commits to a remote repository.
Applications: Sharing your changes.
Examples:
git push origin main
8. Tagging
a. git tag
Explanation: Creates tags to mark specific points in history.
Applications: Marking releases or milestones.
Examples:
git tag v1.0
git tag -a v1.0 -m "Release 1.0"
9. Undoing Changes
a. git revert
Explanation: Creates a new commit that undoes changes.
Applications: Reversing commits without losing history.
Examples:
git revert HEAD
b. git reset
Explanation: Resets changes in the staging area or repository.
Applications: Undoing commits or changes.
Examples:
git reset --soft HEAD~1
git reset --hard
10. Advanced Commands
a. git rebase
Explanation: Re-applies commits on top of another base tip.
Applications: Streamlining commit history.
Examples:
git rebase main
11. Miscellaneous
a. git show
Explanation: Displays detailed information about commits or objects.
Applications: Examining changes in detail.
Examples:
git show <commit>
b. git diff
Explanation: Shows differences between commits, branches, or the working directory.
Applications: Analyzing changes.
Examples:
git diff
git diff HEAD
c. git clean
Explanation: Removes untracked files or directories.
Applications: Cleaning up your working directory.
Examples:
git clean -f